{
	"info": {
		"_postman_id": "f01b83fb-4553-4cbf-bb4e-6d15af9e74fc",
		"name": "01_New_order_2_prod_GQL",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "41708234"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.be.an('object');",
							"    pm.expect(responseBody).to.have.property('data');",
							"    pm.expect(responseBody.data).to.have.property('createUser');",
							"    pm.expect(responseBody.data.createUser).to.have.property('id');",
							"    pm.environment.set(\"user_id\", responseBody.data.createUser.id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const uniqueName = `User_${Math.random().toString(36).substring(2, 8)}_${Date.now()}`;",
							"",
							"const uniqueEmail = `${uniqueName}@example.com`;",
							"",
							"pm.variables.set(\"uniqueName\", uniqueName);",
							"pm.variables.set(\"uniqueEmail\", uniqueEmail);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"mutation CreateUser($name: String!, $email: String!, $password: String!) { createUser(name: $name, email: $email, password: $password) { id name email } }\",\n  \"variables\": {\n    \"name\": \"{{uniqueName}}\",\n    \"email\": \"{{uniqueEmail}}\",\n    \"password\": \"abudabislezsverbluda\"\n  }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{ServerApollo}}"
			},
			"response": []
		},
		{
			"name": "Get user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"query\": \"query GetUser($getUserId: ID!) {  getUser(id: $getUserId) { id  email   name }}\",\n  \"variables\": {    \n    \"getUserId\": {{user_id}}\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{ServerApollo}}"
			},
			"response": []
		},
		{
			"name": "Create order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.be.an('object');",
							"    pm.expect(responseBody).to.have.property('data');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function getRandomNumber(min, max) {",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"const product1 = getRandomNumber(1, 20);",
							"const product2 = getRandomNumber(1, 20);",
							"",
							"pm.variables.set(\"product1\", product1);",
							"pm.variables.set(\"product2\", product2);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"mutation CreateOrder($userId: ID!, $products: [String!]!, $amount: Float!) { createOrder(userId: $userId, products: $products, amount: $amount) { id userid products { products { id name }} amount } }\",\n  \"variables\": {\n    \"userId\": {{user_id}},\n    \"products\": [\"{{product1}}\",\"{{product2}}\"],\n    \"amount\": 120.50\n  }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{ServerApollo}}"
			},
			"response": []
		},
		{
			"name": "Get user orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"query GetOrders($userId: ID!) {  getOrders(userId: $userId, limit: 99) { orders { id userid amount products { products { id name }} } pageInfo {hasNextPage} }}\",\n  \"variables\": {    \n    \"userId\": {{user_id}}\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{ServerApollo}}"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}